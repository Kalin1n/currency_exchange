{"version":3,"sources":["components/Header/styles.js","store/index.js","components/Header/index.js","components/Dashboard/styles.js","components/Dashboard/index.js","theme/index.js","components/App/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","header","width","padding","display","justifyContent","alignItems","actionsWrapper","button","margin","background","palette","primary","secondary","color","input","height","exchangeRate","getCurrencys","a","fetch","json","response","runInAction","transformToHryvna","amount","buy","makeObservable","this","observable","onBecomeObserved","Header","useState","setAmount","inHryvna","setInHryvna","classes","moneyStore","className","Typography","variant","Input","type","placeholder","value","onChange","event","target","Button","onClick","preventDefault","wrapper","gridTemplateColumns","exchangeCard","border","main","currencys","fontWeight","rates","observer","map","ccy","base_ccy","sale","baseTheme","createMuiTheme","MainApp","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a0a0583.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core\"\r\n\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n header:{\r\n  width: '100%',\r\n  padding: '30px',\r\n  display:\"flex\",\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center'\r\n },\r\n actionsWrapper:{\r\n  width: '50%'\r\n },\r\n button:{\r\n  width:\"100px\",\r\n  margin:\"0px 20px\",\r\n  background: theme.palette.primary.secondary,\r\n  color: \"#fff\"\r\n },\r\n input:{\r\n  height: '30px',\r\n  width: \"50%\",\r\n  padding: '5px'\r\n }\r\n}));\r\n\r\nexport default useStyles;","import {makeObservable, runInAction, onBecomeObserved, observable} from \"mobx\"\r\n\r\nclass MoneyStore{\r\n  exchangeRate = null;\r\n\r\n  constructor(){\r\n    makeObservable(this, {\r\n      exchangeRate: observable\r\n    })\r\n    onBecomeObserved(this, \"exchangeRate\", ()=> this.getCurrencys())\r\n  }\r\n\r\n  getCurrencys = async () => {\r\n    const response = await (await fetch(\"https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5\")).json();\r\n    runInAction(()=>{\r\n      this.exchangeRate = response\r\n    })\r\n  }\r\n\r\n  transformToHryvna = (amount) => {\r\n    return amount * this.exchangeRate[0].buy\r\n  }\r\n}\r\n\r\nexport default new MoneyStore();","import React, {useState} from \"react\";\r\nimport {Button, Input, Typography} from \"@material-ui/core\"\r\n\r\nimport useStyles from \"./styles\"\r\n\r\nimport moneyStore from \"../../store\";\r\n\r\nconst Header = () => {\r\n  const [amount, setAmount] = useState(400);\r\n  const [inHryvna, setInHryvna] = useState();\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const {transformToHryvna} = moneyStore;\r\n  const submit = (event) => {\r\n    event.preventDefault();\r\n    setInHryvna(transformToHryvna(amount))\r\n  }\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <div>\r\n        <Typography variant=\"h2\">Sallary app</Typography>\r\n        {\r\n          inHryvna && inHryvna\r\n        }\r\n      </div>\r\n      <div className={classes.actionsWrapper}>\r\n        <Input  type=\"number\" placeholder=\"Sallary\" className={classes.input} value={amount} onChange={(event)=>setAmount(event.target.value)} />\r\n        <Button \r\n          variant='contained'\r\n          onClick={submit} \r\n          className={classes.button}\r\n        >\r\n            Count\r\n        </Button>\r\n      </div>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header;","import {makeStyles} from \"@material-ui/core\"\r\n\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n  wrapper:{\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\"\r\n  },\r\n  exchangeCard:{\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n    margin: \"2em\",\r\n    padding: \"1.5em\",\r\n  },\r\n  currencys:{\r\n    fontWeight: 600,\r\n    display: 'flex',\r\n    justifyContent:\"space-between\"\r\n  },\r\n  rates:{\r\n    display: 'flex',\r\n    justifyContent:\"space-between\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from \"react\"\r\nimport {observer} from \"mobx-react-lite\"\r\n\r\n// import classes from \"./index.module.css\"\r\nimport useStyles from \"./styles\"\r\n\r\nimport moneyStore from \"../../store\";\r\n\r\nconst Dashboard = () => {\r\n  const {exchangeRate} = moneyStore\r\n   \r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n     {\r\n          exchangeRate &&  exchangeRate.map(({ccy, base_ccy, buy, sale})=>\r\n            <div key={ccy+\"_\"+base_ccy} className={classes.exchangeCard}>\r\n              <div className={classes.currencys}>\r\n                <p>{ccy}</p>\r\n                <p>{base_ccy}</p>\r\n              </div>\r\n              <div className={classes.rates}>\r\n                <p> Продажа : {buy}</p>\r\n                <p> Покупка : {sale}</p> \r\n              </div>    \r\n            </div>)\r\n        }\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default observer(Dashboard);","import {createMuiTheme} from \"@material-ui/core\"\r\n\r\nconst baseTheme = createMuiTheme({\r\n  palette:{\r\n    primary:{\r\n      main: \"#34C329\",\r\n      secondary:\"#119507\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default baseTheme;","import React from \"react\";\r\nimport {ThemeProvider, CssBaseline} from \"@material-ui/core\";\r\nimport Header from \"../Header\"\r\nimport Dashboard from \"../Dashboard\";\r\n\r\nimport baseTheme from \"../../theme\"\r\n\r\nconst MainApp = () => {  \r\n  return(\r\n    <ThemeProvider theme={baseTheme}>\r\n      <CssBaseline />\r\n      <Header />\r\n      <Dashboard />\r\n    </ThemeProvider>\r\n  )\r\n};\r\n\r\nexport default MainApp;\r\n","import MainApp from \"./components/App\"\n\nfunction App() {\n  return (\n    <MainApp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}