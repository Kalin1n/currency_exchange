{"version":3,"sources":["components/Header/styles.js","store/index.js","components/ThreeMonth/styles.js","components/ThreeMonth/index.js","components/MainActions/styles.js","components/MainActions/index.js","components/Header/index.js","components/Dashboard/styles.js","components/Dashboard/index.js","theme/index.js","components/App/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","header","width","padding","display","gridTemplateColumns","justifyContent","alignItems","blackHeader","backgroundColor","exchangeRate","threeMonthAmount","hryvnaAmount","getCurrencys","a","fetch","json","response","filter","ccy","runInAction","getHistory","console","log","transformToHryvna","amount","buy","makeObservable","this","observable","onBecomeObserved","en","countThreeMonth","checkboxWrapper","marginTop","infoRow","background","palette","primary","second","borderBottom","white","ThreeMonth","useState","checked","setChecked","moneyStore","threeMonthAfterTaxes","classes","className","FormControlLabel","control","Checkbox","color","onChange","label","Typography","info","minHeight","flexDirection","actionsWrapper","button","margin","secondary","input","height","MainActions","undefined","setAmount","inHryvna","setInHryvna","afterTaxes","submit","event","preventDefault","variant","Input","type","placeholder","value","target","Button","onClick","Header","currentTime","Date","getHours","black","wrapper","exchangeCard","border","main","borderRadius","currencys","fontWeight","rates","observer","map","base_ccy","sale","baseTheme","createMuiTheme","first","MainApp","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6602a614.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    width: \"100%\",\r\n    padding: \"30px\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    \"@media(max-width: 500px)\": {\r\n      gridTemplateColumns: \"auto\",\r\n      padding: \"10px 20px\",\r\n    },\r\n  },\r\n  blackHeader: {\r\n    width: \"100%\",\r\n    backgroundColor: \"lightgrey\",\r\n    padding: \"30px\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    \"@media(max-width: 500px)\": {\r\n      gridTemplateColumns: \"auto\",\r\n      padding: \"10px 20px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import {\r\n  makeObservable,\r\n  runInAction,\r\n  onBecomeObserved,\r\n  observable,\r\n} from \"mobx\";\r\n\r\nclass MoneyStore {\r\n  exchangeRate = null;\r\n  threeMonthAmount = null;\r\n  hryvnaAmount = 0;\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      exchangeRate: observable,\r\n      hryvnaAmount: observable,\r\n    });\r\n    onBecomeObserved(this, \"exchangeRate\", () => this.getCurrencys());\r\n  }\r\n\r\n  getCurrencys = async () => {\r\n    let response = await (\r\n      await fetch(\r\n        \"https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5\"\r\n      )\r\n    ).json();\r\n    // We support Ukraine, it means no russians\r\n    response = response.filter(({ ccy }) => ccy !== \"RUR\");\r\n\r\n    runInAction(() => {\r\n      this.exchangeRate = response;\r\n    });\r\n  };\r\n\r\n  getHistory = async () => {\r\n    let response = await (\r\n      await fetch(\r\n        \"https://api.privatbank.ua/p24api/exchange_rates?json&date=01.12.2019\"\r\n      )\r\n    ).json();\r\n    console.log(\"Response : \", response);\r\n  };\r\n\r\n  transformToHryvna = (amount) => {\r\n    runInAction(() => {\r\n      this.hryvnaAmount = amount * this.exchangeRate[0].buy;\r\n    });\r\n    return amount * this.exchangeRate[0].buy;\r\n  };\r\n\r\n  get countThreeMonth() {\r\n    return this.hryvnaAmount * 3;\r\n  }\r\n\r\n  get afterTaxes() {\r\n    if (this.hryvnaAmount) {\r\n      const en = (this.hryvnaAmount / 100) * 5;\r\n      const afterEsv = this.hryvnaAmount - 1320 - en;\r\n      return afterEsv;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get threeMonthAfterTaxes() {\r\n    if (this.countThreeMonth) {\r\n      const en = (this.countThreeMonth / 100) * 5;\r\n      const afterEsv = this.countThreeMonth - 3960 - en;\r\n      return afterEsv;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new MoneyStore();\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  checkboxWrapper: {\r\n    marginTop: 20,\r\n    width: \"100%\",\r\n  },\r\n  infoRow: {\r\n    padding: \"10px 05px\",\r\n    background: theme.palette.primary.second,\r\n    borderBottom: `1px solid ${theme.palette.primary.white}`,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport { Observer } from \"mobx-react-lite\";\r\nimport { Typography, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\n\r\nimport moneyStore from \"../../store\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst ThreeMonth = () => {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const { countThreeMonth, threeMonthAfterTaxes } = moneyStore;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleCheck = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.checkboxWrapper}>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color=\"primary\"\r\n              checked={checked}\r\n              onChange={handleCheck}\r\n              label=\"For 3 months?\"\r\n            />\r\n          }\r\n          label=\"For 3 months \"\r\n        />\r\n      </div>\r\n      {checked && (\r\n        <Observer>\r\n          {() => (\r\n            <div>\r\n              <Typography className={classes.infoRow}>\r\n                Three month amount : <b>{countThreeMonth}</b>\r\n              </Typography>\r\n              <Typography className={classes.infoRow}>\r\n                Three month amount after taxes : <b>{threeMonthAfterTaxes}</b>\r\n              </Typography>\r\n            </div>\r\n          )}\r\n        </Observer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreeMonth;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  info: {\r\n    width: \"100%\",\r\n    minHeight: 85,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  actionsWrapper: {\r\n    width: \"50%\",\r\n    \"@media(max-width: 500px)\": {\r\n      marginTop: 20,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  button: {\r\n    width: \"100px\",\r\n    margin: \"0px 20px\",\r\n    background: theme.palette.primary.secondary,\r\n    color: \"#fff\",\r\n  },\r\n  input: {\r\n    height: \"30px\",\r\n    width: \"50%\",\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport { Observer } from \"mobx-react-lite\";\r\nimport { Button, Input, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nimport moneyStore from \"../../store\";\r\n\r\nconst MainActions = () => {\r\n  const [amount, setAmount] = useState(undefined);\r\n  const [inHryvna, setInHryvna] = useState();\r\n\r\n  const classes = useStyles();\r\n\r\n  const { transformToHryvna, afterTaxes } = moneyStore;\r\n\r\n  const submit = (event) => {\r\n    event.preventDefault();\r\n    setInHryvna(transformToHryvna(amount));\r\n  };\r\n  return (\r\n    <Observer>\r\n      {() => (\r\n        <>\r\n          <div className={classes.info}>\r\n            <Typography variant=\"h5\">Without taxes {inHryvna}</Typography>\r\n            <Typography variant=\"h5\">After taxes {afterTaxes}</Typography>\r\n          </div>\r\n          <div className={classes.actionsWrapper}>\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"Sallary\"\r\n              className={classes.input}\r\n              value={amount}\r\n              onChange={(event) => setAmount(event.target.value)}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={submit}\r\n              className={classes.button}\r\n            >\r\n              Count\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Observer>\r\n  );\r\n};\r\n\r\nexport default MainActions;\r\n","import React from \"react\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nimport ThreeMonth from \"../ThreeMonth\";\r\nimport MainActions from \"../MainActions\";\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  let currentTime = new Date().getHours();\r\n\r\n  const black = currentTime < 10 || currentTime > 19;\r\n\r\n  return (\r\n    <header className={black ? classes.blackHeader : classes.header}>\r\n      <MainActions />\r\n      <ThreeMonth />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(2,  1fr)\",\r\n    background: theme.palette.primary.second,\r\n    \"@media(max-width: 500px)\": {\r\n      gridTemplateColumns: \"auto\",\r\n    },\r\n  },\r\n  exchangeCard: {\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n    borderRadius: theme.borderRadius,\r\n    margin: \"2em\",\r\n    padding: \"1.5em\",\r\n  },\r\n  currencys: {\r\n    fontWeight: 600,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  rates: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nimport moneyStore from \"../../store\";\r\n\r\nconst Dashboard = () => {\r\n  const { exchangeRate, getHistory } = moneyStore;\r\n\r\n  getHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {exchangeRate &&\r\n        exchangeRate.map(({ ccy, base_ccy, buy, sale }) => (\r\n          <div key={ccy + \"_\" + base_ccy} className={classes.exchangeCard}>\r\n            <div className={classes.currencys}>\r\n              <p>{ccy}</p>\r\n              <p>{base_ccy}</p>\r\n            </div>\r\n            <div className={classes.rates}>\r\n              <p> Продажа : {buy}</p>\r\n              <p> Покупка : {sale}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Dashboard);\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst baseTheme = createMuiTheme({\r\n  borderRadius: \"1em\",\r\n  palette: {\r\n    primary: {\r\n      main: \"#10451d\",\r\n      secondary: \"#155d27\",\r\n      first: \"#1a7431\",\r\n      second: \"#92e6a7\",\r\n      white: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default baseTheme;\r\n","import React from \"react\";\r\nimport {ThemeProvider, CssBaseline} from \"@material-ui/core\";\r\nimport Header from \"../Header\"\r\nimport Dashboard from \"../Dashboard\";\r\n\r\nimport baseTheme from \"../../theme\"\r\n\r\nconst MainApp = () => {  \r\n  return(\r\n    <ThemeProvider theme={baseTheme}>\r\n      <CssBaseline />\r\n      <Header />\r\n      <Dashboard />\r\n    </ThemeProvider>\r\n  )\r\n};\r\n\r\nexport default MainApp;\r\n","import MainApp from \"./components/App\";\n\nfunction App() {\n  return <MainApp />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}