{"version":3,"sources":["components/Header/styles.js","store/index.js","components/Header/index.js","components/Dashboard/styles.js","components/Dashboard/index.js","theme/index.js","components/App/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","header","width","padding","display","gridTemplateColumns","justifyContent","alignItems","blackHeader","backgroundColor","info","minHeight","flexDirection","actionsWrapper","marginTop","button","margin","background","palette","primary","secondary","color","input","height","checkboxWrapper","infoRow","second","borderBottom","white","exchangeRate","threeMonthAmount","threeMonthsCheck","hryvnaAmount","getCurrencys","a","fetch","json","response","filter","ccy","runInAction","setCheck","console","log","transformToHryvna","amount","buy","countThreeMonth","makeObservable","this","observable","action","onBecomeObserved","en","observer","useState","undefined","setAmount","inHryvna","setInHryvna","classes","moneyStore","afterTaxes","threeMonthAfterTaxes","autorun","currentTime","Date","getHours","black","className","Typography","variant","Input","type","placeholder","value","onChange","event","target","Button","onClick","preventDefault","FormControlLabel","control","Checkbox","checked","label","the","wrapper","exchangeCard","border","main","borderRadius","currencys","fontWeight","rates","map","base_ccy","sale","baseTheme","createMuiTheme","first","MainApp","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d42daa1d.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    width: \"100%\",\r\n    padding: \"30px\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    \"@media(max-width: 500px)\": {\r\n      gridTemplateColumns: \"auto\",\r\n      padding: \"10px 20px\",\r\n    },\r\n  },\r\n  blackHeader: {\r\n    width: \"100%\",\r\n    backgroundColor: \"lightgrey\",\r\n    padding: \"30px\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    \"@media(max-width: 500px)\": {\r\n      gridTemplateColumns: \"auto\",\r\n      padding: \"10px 20px\",\r\n    },\r\n  },\r\n  info: {\r\n    width: \"100%\",\r\n    minHeight: 85,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  actionsWrapper: {\r\n    width: \"50%\",\r\n    \"@media(max-width: 500px)\": {\r\n      marginTop: 20,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  button: {\r\n    width: \"100px\",\r\n    margin: \"0px 20px\",\r\n    background: theme.palette.primary.secondary,\r\n    color: \"#fff\",\r\n  },\r\n  input: {\r\n    height: \"30px\",\r\n    width: \"50%\",\r\n    padding: \"5px\",\r\n  },\r\n  checkboxWrapper: {\r\n    marginTop: 20,\r\n    width: \"100%\",\r\n  },\r\n  infoRow: {\r\n    padding: \"10px 05px\",\r\n    background: theme.palette.primary.second,\r\n    borderBottom: `1px solid ${theme.palette.primary.white}`,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import {\r\n  makeObservable,\r\n  runInAction,\r\n  onBecomeObserved,\r\n  observable,\r\n  action,\r\n} from \"mobx\";\r\n\r\nclass MoneyStore {\r\n  exchangeRate = null;\r\n  threeMonthAmount = null;\r\n  threeMonthsCheck = false;\r\n  hryvnaAmount = 0;\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      exchangeRate: observable,\r\n      hryvnaAmount: observable,\r\n      threeMonthAmount: observable,\r\n      threeMonthsCheck: observable,\r\n      setCheck: action,\r\n    });\r\n    onBecomeObserved(this, \"exchangeRate\", () => this.getCurrencys());\r\n  }\r\n\r\n  getCurrencys = async () => {\r\n    let response = await (\r\n      await fetch(\r\n        \"https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5\"\r\n      )\r\n    ).json();\r\n    // We support Ukraine, it means no russians\r\n    response = response.filter(({ ccy }) => ccy !== \"RUR\");\r\n    runInAction(() => {\r\n      this.exchangeRate = response;\r\n    });\r\n  };\r\n\r\n  setCheck = () => {\r\n    console.log(this.threeMonthsCheck);\r\n    this.threeMonthsCheck = !this.threeMonthsCheck;\r\n    console.log(this.threeMonthsCheck);\r\n  };\r\n\r\n  transformToHryvna = (amount) => {\r\n    runInAction(() => {\r\n      this.hryvnaAmount = amount * this.exchangeRate[0].buy;\r\n    });\r\n    return amount * this.exchangeRate[0].buy;\r\n  };\r\n\r\n  countThreeMonth = () => {\r\n    const threeMonthAmount = this.hryvnaAmount * 3;\r\n    this.threeMonthAmount = threeMonthAmount;\r\n  };\r\n\r\n  get afterTaxes() {\r\n    if (this.hryvnaAmount) {\r\n      const en = (this.hryvnaAmount / 100) * 5;\r\n      const afterEsv = this.hryvnaAmount - 1320 - en;\r\n      return afterEsv;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get threeMonthAfterTaxes() {\r\n    if (this.threeMonthAmount) {\r\n      const en = (this.threeMonthAmount / 100) * 5;\r\n      const afterEsv = this.threeMonthAmount - 3960 - en;\r\n      return afterEsv;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new MoneyStore();\r\n","import React, { useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { autorun } from \"mobx\";\r\n\r\nimport {\r\n  Button,\r\n  Input,\r\n  Typography,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nimport moneyStore from \"../../store\";\r\n\r\nconst Header = () => {\r\n  const [amount, setAmount] = useState(undefined);\r\n  const [inHryvna, setInHryvna] = useState();\r\n  // const [checked, setChecked] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    transformToHryvna,\r\n    afterTaxes,\r\n    countThreeMonth,\r\n    threeMonthAmount,\r\n    threeMonthsCheck,\r\n    threeMonthAfterTaxes,\r\n    setCheck,\r\n  } = moneyStore;\r\n\r\n  const handleCheck = () => {\r\n    console.log(\"handle check\");\r\n    setCheck();\r\n    // setChecked(!checked);\r\n  };\r\n\r\n  const submit = (event) => {\r\n    event.preventDefault();\r\n    setInHryvna(transformToHryvna(amount));\r\n  };\r\n\r\n  autorun((threeMonthsCheck) => {\r\n    // console.log(\"Autorun : \", threeMonthsCheck);\r\n    countThreeMonth();\r\n  });\r\n\r\n  let currentTime = new Date().getHours();\r\n\r\n  const black = currentTime < 10 || currentTime > 19;\r\n  console.log(\"currentTime : \", black);\r\n\r\n  return (\r\n    <header className={black ? classes.blackHeader : classes.header}>\r\n      <div className={classes.info}>\r\n        <Typography variant=\"h5\">Without taxes {inHryvna}</Typography>\r\n        <Typography variant=\"h5\">After taxes {afterTaxes}</Typography>\r\n      </div>\r\n      <div className={classes.actionsWrapper}>\r\n        <Input\r\n          type=\"number\"\r\n          placeholder=\"Sallary\"\r\n          className={classes.input}\r\n          value={amount}\r\n          onChange={(event) => setAmount(event.target.value)}\r\n        />\r\n        <Button variant=\"contained\" onClick={submit} className={classes.button}>\r\n          Count\r\n        </Button>\r\n      </div>\r\n      <div className={classes.checkboxWrapper}>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color=\"primary\"\r\n              checked={threeMonthsCheck}\r\n              onChange={handleCheck}\r\n              label=\"For 3 months?\"\r\n            />\r\n          }\r\n          the\r\n          label=\"For 3 months \"\r\n        />\r\n      </div>\r\n      {threeMonthsCheck && (\r\n        <div>\r\n          <Typography className={classes.infoRow}>\r\n            Three month amount : <b>{threeMonthAmount}</b>\r\n          </Typography>\r\n          <Typography className={classes.infoRow}>\r\n            Three month amount after taxes : <b>{threeMonthAfterTaxes}</b>\r\n          </Typography>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default observer(Header);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(2,  1fr)\",\r\n    background: theme.palette.primary.second,\r\n    \"@media(max-width: 500px)\": {\r\n      gridTemplateColumns: \"auto\",\r\n    },\r\n  },\r\n  exchangeCard: {\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n    borderRadius: theme.borderRadius,\r\n    margin: \"2em\",\r\n    padding: \"1.5em\",\r\n  },\r\n  currencys: {\r\n    fontWeight: 600,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  rates: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nimport moneyStore from \"../../store\";\r\n\r\nconst Dashboard = () => {\r\n  const { exchangeRate } = moneyStore;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {exchangeRate &&\r\n        exchangeRate.map(({ ccy, base_ccy, buy, sale }) => (\r\n          <div key={ccy + \"_\" + base_ccy} className={classes.exchangeCard}>\r\n            <div className={classes.currencys}>\r\n              <p>{ccy}</p>\r\n              <p>{base_ccy}</p>\r\n            </div>\r\n            <div className={classes.rates}>\r\n              <p> Продажа : {buy}</p>\r\n              <p> Покупка : {sale}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Dashboard);\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst baseTheme = createMuiTheme({\r\n  borderRadius: \"1em\",\r\n  palette: {\r\n    primary: {\r\n      main: \"#10451d\",\r\n      secondary: \"#155d27\",\r\n      first: \"#1a7431\",\r\n      second: \"#92e6a7\",\r\n      white: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default baseTheme;\r\n","import React from \"react\";\r\nimport {ThemeProvider, CssBaseline} from \"@material-ui/core\";\r\nimport Header from \"../Header\"\r\nimport Dashboard from \"../Dashboard\";\r\n\r\nimport baseTheme from \"../../theme\"\r\n\r\nconst MainApp = () => {  \r\n  return(\r\n    <ThemeProvider theme={baseTheme}>\r\n      <CssBaseline />\r\n      <Header />\r\n      <Dashboard />\r\n    </ThemeProvider>\r\n  )\r\n};\r\n\r\nexport default MainApp;\r\n","import MainApp from \"./components/App\";\n\nfunction App() {\n  return <MainApp />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}